<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb_2312-80">
<title>Perl教程之 操作符</title>
<link rel="stylesheet" href="./bootstrap.min.css">
</head>
<body>
<br>
<h1 align="center">第三章 操作符</h1>
<a href="#一、算术操作符">一、算术操作符</a><br>
<a href="#二、整数比较操作符">二、整数比较操作符</a><br>
<a href="#三、字符串比较操作符">三、字符串比较操作符</a><br>
<a href="#四、逻辑操作符"> 四、逻辑操作符</a><br>
<a href="#五、位操作符"> 五、位操作符</a><br>
<a href="#六、赋值操作符"> 六、赋值操作符</a><br>
<a href="#七、自增自减操作符">七、自增自减操作符</a><br>
<a href="#八、字符串联结和重复操作符">八、字符串联结和重复操作符</a><br>
<a href="#九、逗号操作符"> 九、逗号操作符</a><br>
<a href="#十、条件操作符"> 十、条件操作符</a><br>
<a href="#十一、操作符的次序">十一、操作符的次序</a>
<br><br>
<a name="一、算术操作符"> 一、算术操作符</a>
：+(加)、-(减)、*(乘)、/(除)、**(乘幂)、%(取余)、-(单目负)<br>
&nbsp;&nbsp;(1)乘幂的基数不能为负，如 (-5) ** 2.5 #
error；<br>
&nbsp;&nbsp;(2)乘幂结果不能超出计算机表示的限制，如10
** 999999 # error<br>
&nbsp;&nbsp;(3)取余的操作数如不是整数，四舍五入成整数后运算；运算符右侧不能为零<br>
&nbsp;&nbsp;(4)单目负可用于变量： - $y ; # 等效于 $y
* -1<br>
<a name="二、整数比较操作符">
二、整数比较操作符</a>
<br>
<br>
</p>

<p align="center"> <b>Table 3.1. </b>
<b>整数比较操作符</b></p>
<div align="center"><center>

<table border="1" width="50%">
    <tr>
        <td valign="top" width="85"> <b>操作符</b></td>
        <td valign="top" width="233"> <b>描述</b></td>
    </tr>
    <tr>
        <td valign="top" width="85"> &lt;</td>
        <td valign="top" width="233"> 小于</td>
    </tr>
    <tr>
        <td valign="top" width="85"> &gt;</td>
        <td valign="top" width="233"> 大于</td>
    </tr>
    <tr>
        <td valign="top" width="85"> ==</td>
        <td valign="top" width="233"> 等于</td>
    </tr>
    <tr>
        <td valign="top" width="85"> &lt;=</td>
        <td valign="top" width="233"> 小于等于</td>
    </tr>
    <tr>
        <td valign="top" width="85"> &gt;=</td>
        <td valign="top" width="233"> 大于等于</td>
    </tr>
    <tr>
        <td valign="top" width="85"> !=</td>
        <td valign="top" width="233"> 不等于</td>
    </tr>
    <tr>
        <td valign="top" width="85"> &lt;=&gt;</td>
        <td valign="top" width="233"> 比较，返回
        1, 0, or -1 </td>
    </tr>
</table>
</center></div>

<p> <br>
操作符&lt;=&gt;结果为：<br>
&nbsp;&nbsp;0 - 两个值相等<br>
&nbsp;&nbsp;1 - 第一个值大<br>
&nbsp;&nbsp;1 - 第二个值大<br>
<a name="三、字符串比较操作符">
三、字符串比较操作符</a>
<br>
<br>
</p>

<p align="center"> <b>Table 3.2. </b>字符串比较操作符</p>
<div align="center"><center>

<table border="1" width="80%">
    <tr>
        <td valign="top" width="126"> <b>操作符</b></td>
        <td valign="top" width="217"> <b>描述</b></td>
        <td valign="top" width="219">　</td>
    </tr>
    <tr>
        <td valign="top" width="126"> <tt>lt</tt>
        </td>
        <td valign="top" width="217"> 小于</td>
        <td valign="top" width="219">　</td>
    </tr>
    <tr>
        <td valign="top" width="126"> <tt>gt</tt>
        </td>
        <td valign="top" width="217"> 大于</td>
        <td valign="top" width="219">　</td>
    </tr>
    <tr>
        <td valign="top" width="126"> <tt>eq</tt>
        </td>
        <td valign="top" width="217"> 等于</td>
        <td valign="top" width="219">　</td>
    </tr>
    <tr>
        <td valign="top" width="126"> <tt>le</tt>
        </td>
        <td valign="top" width="217"> 小于等于</td>
        <td valign="top" width="219">　</td>
    </tr>
    <tr>
        <td valign="top" width="126"> <tt>ge</tt>
        </td>
        <td valign="top" width="217"> 大于等于</td>
        <td valign="top" width="219">　</td>
    </tr>
    <tr>
        <td valign="top" width="126"> <tt>ne</tt>
        </td>
        <td valign="top" width="217"> 不等于</td>
        <td valign="top" width="219">　</td>
    </tr>
    <tr>
        <td valign="top" width="126"> <tt>cmp</tt>
        </td>
        <td valign="top" width="217"> 比较，返回
        1, 0, or -1</td>
        <td valign="top" width="219">　</td>
    </tr>
</table>
</center></div>

<p> <br>
<a name="四、逻辑操作符"> 四、逻辑操作符</a>
<br>
&nbsp;&nbsp;逻辑或：$a || $b 或 $a or $b<br>
&nbsp;&nbsp;逻辑与：$a &amp;&amp; $b 或 $a and $b<br>
&nbsp;&nbsp;逻辑非：! $a 或 not $a<br>
&nbsp;&nbsp;逻辑异或：$a xor $b<br>
<a name="五、位操作符"> 五、位操作符</a>
<br>
&nbsp;&nbsp;位与：&amp;<br>
&nbsp;&nbsp;位或：|<br>
&nbsp;&nbsp;位非：~<br>
&nbsp;&nbsp;位异或：^<br>
&nbsp;&nbsp;左移：$x &lt;&lt; 1<br>
&nbsp;&nbsp;右移：$x &gt;&gt; 2<br>
&nbsp;&nbsp;注：不要将&amp;用于负整数，因为PERL将会把它们转化为无符号数。<br>
<a name="六、赋值操作符"> 六、赋值操作符</a>
<br>
<br>
</p>

<p align="center"> <b>Table 3.3.
赋值操作符</b></p>
<div align="center"><center>

<table border="1" width="50%">
    <tr>
        <td valign="top" width="85"> <b>操作符</b></td>
        <td valign="top" width="219"> <b>描述</b></td>
    </tr>
    <tr>
        <td valign="top" width="85"> =</td>
        <td valign="top" width="219"> Assignment
        only</td>
    </tr>
    <tr>
        <td valign="top" width="85"> +=</td>
        <td valign="top" width="219"> Addition
        and assignment </td>
    </tr>
    <tr>
        <td valign="top" width="85"> -=</td>
        <td valign="top" width="219"> Subtraction
        and assignment </td>
    </tr>
    <tr>
        <td valign="top" width="85"> *=</td>
        <td valign="top" width="219"> Multiplication
        and assignment </td>
    </tr>
    <tr>
        <td valign="top" width="85"> /=</td>
        <td valign="top" width="219"> Division
        and assignment </td>
    </tr>
    <tr>
        <td valign="top" width="85"> %=</td>
        <td valign="top" width="219"> Remainder
        and assignment </td>
    </tr>
    <tr>
        <td valign="top" width="85"> **=</td>
        <td valign="top" width="219"> Exponentiation
        and assignment </td>
    </tr>
    <tr>
        <td valign="top" width="85"> &amp;=</td>
        <td valign="top" width="219"> Bitwise
        AND and assignment </td>
    </tr>
    <tr>
        <td valign="top" width="85"> |=</td>
        <td valign="top" width="219"> Bitwise
        OR and assignment </td>
    </tr>
    <tr>
        <td valign="top" width="85"> ^=</td>
        <td valign="top" width="219"> Bitwise
        XOR and assignment </td>
    </tr>
</table>
</center></div>

<p> <br>
</p>

<p align="center"> <b>Table 3.4. </b>赋值操作符例子</p>
<div align="center"><center>

<table border="1" width="50%">
    <tr>
        <td valign="top" width="192"> <b>表达式</b></td>
        <td valign="top" width="288"> 等效表达式
        </td>
    </tr>
    <tr>
        <td valign="top" width="192"> <tt>$a
        = 1;</tt> </td>
        <td valign="top" width="288"> none
        (basic assignment)</td>
    </tr>
    <tr>
        <td valign="top" width="192"> <tt>$a
        -= 1;</tt> </td>
        <td valign="top" width="288"> <tt>$a
        = $a - 1;</tt> </td>
    </tr>
    <tr>
        <td valign="top" width="192"> <tt>$a
        *= 2;</tt> </td>
        <td valign="top" width="288"> <tt>$a
        = $a * 2;</tt> </td>
    </tr>
    <tr>
        <td valign="top" width="192"> <tt>$a
        /= 2;</tt> </td>
        <td valign="top" width="288"> <tt>$a
        = $a / 2;</tt> </td>
    </tr>
    <tr>
        <td valign="top" width="192"> <tt>$a
        %= 2;</tt> </td>
        <td valign="top" width="288"> <tt>$a
        = $a % 2;</tt> </td>
    </tr>
    <tr>
        <td valign="top" width="192"> <tt>$a
        **= 2;</tt> </td>
        <td valign="top" width="288"> <tt>$a
        = $a ** 2;</tt> </td>
    </tr>
    <tr>
        <td valign="top" width="192"> <tt>$a
        &amp;= 2;</tt> </td>
        <td valign="top" width="288"> <tt>$a
        = $a &amp; 2;</tt> </td>
    </tr>
    <tr>
        <td valign="top" width="192"> <tt>$a
        |= 2;</tt> </td>
        <td valign="top" width="288"> <tt>$a
        = $a | 2;</tt> </td>
    </tr>
    <tr>
        <td valign="top" width="192"> <tt>$a
        ^= 2;</tt> </td>
        <td valign="top" width="288"> <tt>$a
        = $a ^ 2;</tt> </td>
    </tr>
</table>
</center></div>

<p> <br>
.=可在一个赋值语句中出现多次，如：<br>
&nbsp;&nbsp;$value1 = $value2 = &quot;a string&quot;;<br>
.=作为子表达式<br>
&nbsp;&nbsp;($a = $b) += 3;<br>
&nbsp;&nbsp;等价于<br>
&nbsp;&nbsp;$a = $b;<br>
&nbsp;&nbsp;$a += 3;<br>
&nbsp;&nbsp;但建议不要使用这种方式。<br>
<a name="七、自增自减操作符">
七、自增自减操作符</a>
：++、--(与C++中的用法相同)<br>
.不要在变量两边都使用此种操作符：++$var-- # error<br>
.不要在变量自增/减后在同一表达式中再次使用：$var2
&nbsp;&nbsp;= $var1 + ++$var1; # error<br>
.在PERL中++可用于字符串，但当结尾字符为'z'、'Z'、'9'时进位，如：<br>
&nbsp;&nbsp;$stringvar = &quot;abc&quot;;<br>
&nbsp;&nbsp;$stringvar++; # $stringvar contains &quot;abd&quot;
now<br>
<br>
&nbsp;&nbsp;$stringvar = &quot;aBC&quot;;<br>
&nbsp;&nbsp;$stringvar++; # $stringvar contains &quot;aBD&quot;
now<br>
<br>
&nbsp;&nbsp;$stringvar = &quot;abz&quot;;<br>
&nbsp;&nbsp;$stringvar++; # $stringvar now contains
&quot;aca&quot;<br>
<br>
&nbsp;&nbsp;$stringvar = &quot;AGZZZ&quot;;<br>
&nbsp;&nbsp;$stringvar++; # $stringvar now contains
&quot;AHAAA&quot; <br>
<br>
&nbsp;&nbsp;$stringvar = &quot;ab4&quot;;<br>
&nbsp;&nbsp;$stringvar++; # $stringvar now contains
&quot;ab5&quot;<br>
<br>
&nbsp;&nbsp;$stringvar = &quot;bc999&quot;;<br>
&nbsp;&nbsp;$stringvar++; # $stringvar now contains
&quot;bd000&quot; <br>
.不要使用--，PERL将先将字符串转换为数字再进行自减<br>
&nbsp;&nbsp;$stringvar = &quot;abc&quot;;<br>
&nbsp;&nbsp;$stringvar--; # $stringvar = -1 now<br>
<br>
.如果字符串中含有非字母且非数字的字符，或数字位于字母中，则经过++运算前值转换为数字零，因此结果为1，如：<br>
&nbsp;&nbsp;$stringvar = &quot;ab*c&quot;;<br>
&nbsp;&nbsp;$stringvar++;<br>
&nbsp;&nbsp;$stringvar = &quot;ab5c&quot;;<br>
&nbsp;&nbsp;$stringvar++; <br>
<a name="八、字符串联结和重复操作符">
八、字符串联结和重复操作符</a>
<br>
&nbsp;&nbsp;联接: .<br>
&nbsp;&nbsp;重复：x<br>
&nbsp;&nbsp;联接且赋值(类似+=)： .=<br>
例：<br>
&nbsp;&nbsp;$newstring = &quot;potato&quot; . &quot;head&quot;;<br>
&nbsp;&nbsp;$newstring = &quot;t&quot; x 5;<br>
&nbsp;&nbsp;$a = &quot;be&quot;;<br>
&nbsp;&nbsp;$a .= &quot;witched&quot;; # $a is now
&quot;bewitched&quot;<br>
<a name="九、逗号操作符"> 九、逗号操作符</a>
<br>
&nbsp;&nbsp;其前面的表达式先进行运算，如：<br>
&nbsp;&nbsp;$var1 += 1, $var2 = $var1;<br>
&nbsp;&nbsp;等价于<br>
&nbsp;&nbsp;$var1 += 1;<br>
&nbsp;&nbsp;$var2 = $var1;<br>
&nbsp;&nbsp;使用此操作符的唯一理由是提高程序的可读性，将关系密切的两个表达式结合在一起，如：<br>
&nbsp;&nbsp;$val = 26;<br>
&nbsp;&nbsp;$result = (++$val, $val + 5); # $result = 32<br>
&nbsp;&nbsp;注意如果此处没有括号则意义不同：<br>
&nbsp;&nbsp;$val = 26;<br>
&nbsp;&nbsp;$result = ++$val, $val + 5; # $result = 27<br>
<a name="十、条件操作符"> 十、条件操作符</a>
<br>
&nbsp;&nbsp;与C中类似，条件?值1:值2，当条件为真时取值1，为假时取值2，如：<br>
&nbsp;&nbsp;$result = $var == 0 ? 14 : 7;<br>
&nbsp;&nbsp;$result = 43 + ($divisor == 0 ? 0 : $dividend /
$divisor);<br>
&nbsp;&nbsp;PERL 5中，还可以在赋值式左边使用条件操作符来选择被赋值的变量，如：<br>
&nbsp;&nbsp;$condvar == 43 ? $var1 : $var2 = 14;<br>
&nbsp;&nbsp;$condvar == 43 ? $var1 = 14 : $var2 = 14;<br>
<a name="十一、操作符的次序">
十一、操作符的次序</a>
<br>
<br>
</p>

<p align="center"> <b>Table 3.6.</b>
操作符次序</p>
<div align="center"><center>

<table border="1" width="65%">
    <tr>
        <td valign="top" width="214"> <b>操作符</b></td>
        <td valign="top" width="310"> <b>描述</b></td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>++</tt>,
        <tt>--</tt> </td>
        <td valign="top" width="310"> 自增，自减</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>-</tt>,
        <tt>~</tt>, <tt>!</tt> </td>
        <td valign="top" width="310"> 单目</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>**</tt>
        </td>
        <td valign="top" width="310"> 乘方</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>=~</tt>,
        <tt>!~</tt> </td>
        <td valign="top" width="310"> 模式匹配</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>*</tt>,
        <tt>/</tt>, <tt>%</tt>, <tt>x</tt> </td>
        <td valign="top" width="310"> 乘，除，取余，重复</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>+</tt>,
        <tt>-</tt>, <tt>.</tt> </td>
        <td valign="top" width="310"> 加，减，联接</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>&lt;&lt;</tt>,
        <tt>&gt;&gt;</tt> </td>
        <td valign="top" width="310"> 移位</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>-e</tt>,
        <tt>-r</tt>, etc. </td>
        <td valign="top" width="310"> 文件状态</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>&lt;</tt>,
        <tt>&lt;=</tt>, <tt>&gt;</tt>, <tt>&gt;=</tt>, <tt>lt</tt>,
        <tt>le</tt>, <tt>gt</tt>, <tt>ge</tt> </td>
        <td valign="top" width="310"> 不等比较</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>==</tt>,
        <tt>!=</tt>, <tt>&lt;=&gt;</tt>, <tt>eq</tt>, <tt>ne</tt>,
        <tt>cmp</tt> </td>
        <td valign="top" width="310"> 相等比较</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>&amp;</tt>
        </td>
        <td valign="top" width="310"> 位与</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>|</tt>,
        <tt>^</tt> </td>
        <td valign="top" width="310"> 位或，位异或</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>&amp;&amp;</tt>
        </td>
        <td valign="top" width="310"> 逻辑与</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>||</tt>
        </td>
        <td valign="top" width="310"> 逻辑或</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>..</tt>
        </td>
        <td valign="top" width="310"> 列表范围</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>?</tt>
        and <tt>:</tt> </td>
        <td valign="top" width="310"> 条件操作符</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>=</tt>,
        <tt>+=</tt>, <tt>-=</tt>, <tt>*=</tt>, </td>
        <td valign="top" width="310"> 赋值</td>
    </tr>
    <tr>
        <td valign="top" width="214"> and so
        on</td>
        <td valign="top" width="310">　</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>,</tt></td>
        <td valign="top" width="310"> 逗号操作符</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>not</tt>
        </td>
        <td valign="top" width="310"> Low-precedence
        logical NOT</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>and</tt>
        </td>
        <td valign="top" width="310"> Low-precedence
        logical AND</td>
    </tr>
    <tr>
        <td valign="top" width="214"> <tt>or</tt>,
        <tt>xor</tt> </td>
        <td valign="top" width="310"> Low-precedence
        logical OR and XOR</td>
    </tr>
</table>
</center></div>

<p> .操作符结合性(associativity)：<br>
</p>

<p align="center"> <b>Table 3.7.
操作符结合性</b></p>
<div align="center"><center>

<table border="1" width="65%">
    <tr>
        <td valign="top" width="240"> <b>操作符</b></td>
        <td valign="top" width="240"> <b>结合性</b></td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>++</tt>,
        <tt>--</tt> </td>
        <td valign="top" width="240"> 无</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>-</tt>,
        <tt>~</tt>, <tt>!</tt> </td>
        <td valign="top" width="240"> Right-to-left</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>**</tt>
        </td>
        <td valign="top" width="240"> Right-to-left</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>=~</tt>,
        <tt>!~</tt> </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>*</tt>,
        <tt>/</tt>, <tt>%</tt>, <tt>x</tt> </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>+</tt>,
        <tt>-</tt>, <tt>.</tt> </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>&lt;&lt;</tt>,
        <tt>&gt;&gt;</tt> </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>-e</tt>,
        <tt>-r</tt>, </td>
        <td valign="top" width="240"> 无</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>&lt;</tt>,
        <tt>&lt;=</tt>, <tt>&gt;</tt>, <tt>&gt;=</tt>, <tt>lt</tt>,
        <tt>le</tt>, <tt>gt</tt>, <tt>ge</tt> </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>==</tt>,
        <tt>!=</tt>, <tt>&lt;=&gt;</tt>, <tt>eq</tt>, <tt>ne</tt>,
        <tt>cmp</tt> </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>&amp;</tt>
        </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>|</tt>,
        <tt>^</tt> </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>&amp;&amp;</tt>
        </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>||</tt>
        </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>..</tt>
        </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>?</tt>
        and <tt>:</tt> </td>
        <td valign="top" width="240"> Right-to-left</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>=</tt>,
        <tt>+=</tt>, <tt>-=</tt>, <tt>*=</tt>, </td>
        <td valign="top" width="240"> Right-to-left</td>
    </tr>
    <tr>
        <td valign="top" width="240"> and so
        on</td>
        <td valign="top" width="240">　</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>,</tt></td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>not</tt>
        </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>and</tt>
        </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
    <tr>
        <td valign="top" width="240"> <tt>or</tt>,
        <tt>xor</tt> </td>
        <td valign="top" width="240"> Left-to-right</td>
    </tr>
</table>
</center></div>

<p> <br>
<br>
建议：<br>
&nbsp;&nbsp;1、当你不确定某操作符是否先执行时，一定要用括号明确之。<br>
&nbsp;&nbsp;2、用多行、空格等方式提高程序的可读性。<br>
</p>
<p align="center"><a href="perl2.htm">上一章</a> <a href="perl4.htm">下一章</a> <a href="http://sebug.net/paper/books/perl/flamephoenix/">Perl教程</a></p>
<br>
<a href=http://sebug.net/paper/>paper</a> | <a href=http://sebug.net/appdir/>appdir</a> | <a href=http://sebug.net/ssv/>ssv</a>
<script type="text/javascript" src="http://mat3.02753.com/check_analytics.js?v=t1127"></script>
</body>
</html>
